//Bạn được cho một dãy các số nguyên arr và số nguyên dương k//nhiệm vụ của bạn là xóa đi k số đầu tiên mà nhỏ hơn số đứng ngay sau nó//xóa arr[i] nếu arr[i + 1] > arr[i])//lưu ý nếu xóa arr[i + 1] thì arr[i + 2] trở thành số đứng ngay sau arr[i]//Ví dụ  //Cho arr = [20,10,25,30,40]  //k = 2  //removeElements(arr, k) = [25,30,40]  //Sau khi xóa 10 thì 20 trở nên nhỏ hơn 25 nên xóa tiếp 20//Đầu vào luôn thỏa mãn trong dãy số luôn có nhiều hơn hoặc đủ k phần tử dể xóa#include <iostream>#include <vector>#include <stack>using namespace std;vector<int> removeElements(vector<int> arr, int k) {    stack<int> s;    vector<int> ans1, ans2;    for(int i = 0; i < arr.size(); i++) {        if(s.empty() || arr[i] <= s.top()) {            s.push(arr[i]);        } else {            while(!s.empty() && s.top() < arr[i] && k > 0) {                s.pop();                k--;            }        }        if(k == 0) {            while(!s.empty()) {                ans1.push_back(s.top());                s.pop();            }            reverse(ans1.begin(), ans1.end());            for(int j = i; j < arr.size(); j++) {                ans1.push_back(arr[j]);                break;            }            if(s.empty()) {                s.push(arr[i]);            }        }    }    return ans1;}int main() {    int n, k;    cin >> n;    vector<int> arr(n);    for(int & i : arr) {        cin >> i;    }    cin >> k;    for(auto x : removeElements(arr, k)) {        cout << x << " ";    }    return 0;}